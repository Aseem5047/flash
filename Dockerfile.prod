# Stage 1: Build the Next.js application
FROM node:18.17.0-alpine AS builder

# Set the working directory
WORKDIR /app

# Copy package.json and package-lock.json
COPY package*.json ./

# Install dependencies
RUN npm ci

# Copy the rest of the application code
COPY . .

# Define build arguments (optional but included for build time use)
ARG NEXT_PUBLIC_STREAM_API_KEY
ARG STREAM_SECRET_KEY
ARG NEXT_PUBLIC_STREAM_SECRET_KEY
ARG NEXT_PUBLIC_STREAM_APP_ID
ARG TWOFACTOR_API_KEY
ARG JWT_KEY
ARG NEXT_PUBLIC_BASE_URL
ARG NEXT_PUBLIC_BASE_URL_BACKEND
ARG MONGODB_URI
ARG NEXT_PUBLIC_MIXPANEL_TOKEN
ARG NEXT_PUBLIC_RAZORPAY_KEY_ID
ARG NEXT_PUBLIC_RAZORPAY_SECRET
ARG NEXT_PUBLIC_CASHFREE_CLIENT_ID
ARG NEXT_PUBLIC_CASHFREE_CLIENT_SECRET
ARG NEXT_PUBLIC_HYPERVERGE_APP_ID
ARG NEXT_PUBLIC_HYPERVERGE_APP_KEY
ARG NEXT_PUBLIC_MEASUREMENT_ID
ARG NODE_ENV
ARG NEXT_PUBLIC_FIREBASE_KEY
ARG FIREBASE_SERVICE_ACCOUNT_BASE64

# Set environment variable for the build process
ENV NODE_ENV=production

# Build the Next.js application
RUN npm run build

# Stage 2: Create a smaller image for production
FROM node:18.17.0-alpine

# Set the working directory
WORKDIR /app

# Copy only the necessary files from the build stage
COPY --from=builder /app/package*.json ./
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/public ./public

# Install only production dependencies
RUN npm ci --only=production

# Set environment variables (again if needed at runtime)
ENV NODE_ENV=production

# Expose the port the app runs on
EXPOSE 3000

# Start the application
CMD ["npm", "start"]
