name: Build and Push Docker Images

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  IMAGE_NAME: aseem5047/flashcall

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      # Build the production image with .env
      - name: Build prod image
        env:
          NEXT_PUBLIC_STREAM_API_KEY: ${{ secrets.NEXT_PUBLIC_STREAM_API_KEY }}
          STREAM_SECRET_KEY: ${{ secrets.STREAM_SECRET_KEY }}
          NEXT_PUBLIC_STREAM_SECRET_KEY: ${{ secrets.NEXT_PUBLIC_STREAM_SECRET_KEY }}
          NEXT_PUBLIC_STREAM_APP_ID: ${{ secrets.NEXT_PUBLIC_STREAM_APP_ID }}
          TWOFACTOR_API_KEY: ${{ secrets.TWOFACTOR_API_KEY }}
          JWT_KEY: ${{ secrets.JWT_KEY }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          NEXT_PUBLIC_MIXPANEL_TOKEN: ${{ secrets.NEXT_PUBLIC_MIXPANEL_TOKEN }}
          NEXT_PUBLIC_RAZORPAY_KEY_ID: ${{ secrets.NEXT_PUBLIC_RAZORPAY_KEY_ID }}
          NEXT_PUBLIC_RAZORPAY_SECRET: ${{ secrets.NEXT_PUBLIC_RAZORPAY_SECRET }}
          NEXT_PUBLIC_CASHFREE_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_CASHFREE_CLIENT_ID }}
          NEXT_PUBLIC_CASHFREE_CLIENT_SECRET: ${{ secrets.NEXT_PUBLIC_CASHFREE_CLIENT_SECRET }}
          NEXT_PUBLIC_HYPERVERGE_APP_ID: ${{ secrets.NEXT_PUBLIC_HYPERVERGE_APP_ID }}
          NEXT_PUBLIC_HYPERVERGE_APP_KEY: ${{ secrets.NEXT_PUBLIC_HYPERVERGE_APP_KEY }}
          NEXT_PUBLIC_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_MEASUREMENT_ID }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
          NEXT_PUBLIC_FIREBASE_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_KEY }}
          FIREBASE_SERVICE_ACCOUNT_BASE64: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_BASE64 }}
        run: docker build --env-file .env -f Dockerfile.prod -t aseem5047/flashcall:prod .

      # Push the production image to Docker Hub
      - name: Push prod image
        run: docker push aseem5047/flashcall:prod

      # Prune dangling images to free up space
      - name: Prune dangling images
        run: docker image prune -f
